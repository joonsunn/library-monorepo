// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Borrower {
  id        String     @id() @default(uuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt()
  name      String
  email     String
  bookLoans BookLoan[]

  @@unique(email)
  @@index(email)
}

model BookEdition {
  id         String     @id() @default(uuid())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now()) @updatedAt()
  isbn       String
  title      String
  author     String
  bookCopies BookCopy[]

  @@unique([isbn])
  @@index([isbn])
}

model BookCopy {
  id          String      @id() @default(uuid())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now()) @updatedAt()
  editionId   String
  status      String      @default("AVAILABLE")
  bookEdition BookEdition @relation(fields: [editionId], references: [id], onDelete: Cascade)
  bookLoans   BookLoan[]
}

model BookLoan {
  id         String    @id() @default(uuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now()) @updatedAt()
  borrowerId String
  borrower   Borrower  @relation(fields: [borrowerId], references: [id], onDelete: Cascade)
  bookCopyId String
  bookCopy   BookCopy  @relation(fields: [bookCopyId], references: [id], onDelete: Cascade)
  returnedAt DateTime?

  @@index([borrowerId, bookCopyId])
}
